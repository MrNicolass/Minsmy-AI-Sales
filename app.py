import streamlit as st
import pandas as pd
from datetime import datetime
from dotenv import load_dotenv
import os

# Importa as fun√ß√µes do nosso arquivo de l√≥gica principal
import main

# --- Configura√ß√£o da P√°gina e Carregamento da API Key ---

# Carrega as vari√°veis de ambiente do arquivo .env
load_dotenv()
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

st.set_page_config(layout="wide")
st.title("ü§ñ Analisador de Vendas com IA")
st.markdown("Fa√ßa o upload da sua planilha de vendas em formato `.csv` para receber uma an√°lise completa e recomenda√ß√µes estrat√©gicas geradas por IA.")

# --- Interface Gr√°fica (Streamlit) ---

# Instru√ß√µes para o usu√°rio
with st.expander("Clique aqui para ver o formato esperado da planilha"):
    st.markdown("""
    Sua planilha deve conter, no m√≠nimo, as seguintes colunas:
    - `ID_Venda`, `Data_Hora_Venda`, `SKU`, `Nome_Produto`, `Categoria`
    - `Valor_Unitario`, `Custo_Unitario`, `Quantidade`, `Desconto_Aplicado_Percent`
    - `ID_Cliente`, `Tipo_Cliente`, `ID_Vendedor`, `Nome_Vendedor`
    - `Filial`, `Canal_Venda`, `Metodo_Pagamento`, `Status_Venda`
    
    **Observa√ß√£o:** O separador de colunas deve ser o ponto e v√≠rgula (`;`).
    """)

uploaded_file = st.file_uploader("Carregue sua planilha de vendas (.csv)", type="csv")

if uploaded_file is not None:
    # Verifica se a chave da API foi carregada
    if not GOOGLE_API_KEY or GOOGLE_API_KEY == "SUA_CHAVE_API_AQUI":
        st.error("Chave da API do Google n√£o encontrada. Por favor, configure seu arquivo .env.")
    else:
        try:
            # L√™ o arquivo CSV enviado pelo usu√°rio, especificando o separador
            df = pd.read_csv(uploaded_file, sep=';')
            
            st.success("Planilha carregada com sucesso! Processando...")

            # Orquestra a execu√ß√£o das fun√ß√µes do main.py
            with st.spinner('1/3 - Calculando indicadores e gerando gr√°ficos...'):
                kpis, caminhos_graficos = main.processar_dados_vendas(df.copy())
            
            with st.spinner('2/3 - A IA est√° analisando os dados e preparando as recomenda√ß√µes...'):
                analise_ia = main.gerar_analise_ia(kpis, GOOGLE_API_KEY)

            with st.spinner('3/3 - Montando o relat√≥rio em PDF...'):
                pdf_bytes = main.criar_pdf(analise_ia, caminhos_graficos)

            st.success("Relat√≥rio gerado com sucesso!")
            
            # Exibe o bot√£o de download para o usu√°rio
            st.download_button(
                label="Baixar Relat√≥rio em PDF",
                data=pdf_bytes,
                file_name=f"relatorio_vendas_{datetime.now().strftime('%Y%m%d')}.pdf",
                mime="application/pdf"
            )
            
            st.markdown("---")
            st.subheader("An√°lise Gerada pela IA:")
            st.markdown(analise_ia)

        except Exception as e:
            st.error(f"Ocorreu um erro ao processar o arquivo: {e}")
            st.error("Por favor, verifique se o arquivo est√° no formato correto e tente novamente.")